name: Deploy Service on AWS ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: 'us-east-1'
  ECR_REPOSITORY: ${{ github.event.repository.name }}

permissions:
  contents: read

jobs:
  build:
    name: build

  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Environments Vars from Template Parameters
        run: bash .github/workflows/scripts/setup-env-vars-template-params.sh

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build App
        run: ./gradlew build -x test --no-daemon

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Create ECR repo if not exists
        id: create-ecr
        run: aws ecr create-repository --repository-name ${{ env.ENV_NAME }}-${{ env.ECR_REPOSITORY }} || true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        with:
          context: .
          file: infra/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ENV_NAME }}-${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }},${{ env.ECR_REGISTRY }}/${{ env.ENV_NAME }}-${{ env.ECR_REPOSITORY }}:latest

      - name: Verify if is necessary to delete previous stack and delete if so.
        env:
          STACK_NAME: stack-${{ github.ref_name }}-${{ github.event.repository.name }}
        run: bash .github/workflows/scripts/cf-delete-stack.sh

      - name: Deploy CloudFormation stack
        env:
          STACK_NAME: stack-${{ github.ref_name }}-${{ github.event.repository.name }}
          SVC_NAME: ${{ env.ENV_NAME }}-svc-${{ env.ECR_REPOSITORY }}
        run: bash .github/workflows/scripts/cf-deploy-stack.sh
