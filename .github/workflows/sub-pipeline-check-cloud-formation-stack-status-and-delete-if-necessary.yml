name: Check cloud formation stack status and delete if necessary

on:
  workflow_call:
    inputs:
      stack-name:
        required: true
        type: string
      aws-region:
        required: true
        type: string
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true

env:
  STACK_NAME: ${{ inputs.stack-name }}

permissions:
  contents: read

jobs:
  check-cloud-formation-stack-status-and-delete-if-necessary:
    name: Check cloud formation stack status and delete if necessary
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ inputs.aws-region }}

      - name: Run script to build complete template parameters
        run: |
          echo "Verificando o status da stack: $STACK_NAME"

          # Verifica se a stack existe
          stack_exists=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query 'Stacks' --output text 2>/dev/null)
          stack_id=""
          event=""
          status=""

          if [[ -z $stack_exists ]]; then
            echo "A stack $STACK_NAME nao existe. Nenhuma acao necessaria."
            exit 0
          else
            # Obtem o ID do stack
            stack_id=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query 'Stacks[0].StackId' --output text)

            echo "ID da stack: $stack_id"

            # Obtem o evento mais recente da stack
            event=$(aws cloudformation describe-stack-events --stack-name $stack_id --query 'StackEvents[0]' --output json)

            # Verifica se ha eventos na stack
            if [[ -z $event ]]; then
              echo "Nao ha eventos disponiveis para a stack $STACK_NAME."
            else
              # Obtem o status mais recente da stack
              status=$(echo "$event" | jq -r '.ResourceStatus')
              echo "Status atual da stack: $status"
            fi

          fi

          if [[ $status == *"IN_PROGRESS" || 
                $status == *"FAILED" || 
                $status == "ROLLBACK_COMPLETE"
          ]]; then
            echo "A stack esta no estado $status. Entrou na condicional de espera."

            if [[ $status != *"IN_PROGRESS" ]]; then
              echo "A stack esta no estado $status. Iniciando a exclusao da stack..."
              aws cloudformation delete-stack --stack-name $stack_id
            fi

            echo "Aguardando a alteracao de estado da stack..."

            sleep 10s  # Aguarda 10 segundos antes de iniciar o loop while

            # Aguarda ate que o status seja "DELETE_IN_PROGRESS"
            while [[ $status == *"IN_PROGRESS" ]]; do
              sleep 10s  # Aguarda 10 segundos antes de verificar o status novamente

              # Obtem o evento mais recente da stack
              event=$(aws cloudformation describe-stack-events --stack-name $stack_id --query 'StackEvents[0]' --output json)

              # Verifica se a stack ainda existe
              if [[ -z $event ]]; then
                echo "A stack $STACK_NAME nao existe mais. Exclusao completa."
                exit 0
              fi

              # Obtem o status mais recente da stack
              status=$(echo "$event" | jq -r '.ResourceStatus')

              echo "Status atual da stack: $status"
            done

          else
            echo "A stack esta em um estado valido para prosseguir."
          fi

