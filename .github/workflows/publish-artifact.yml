name: SonarQube Analysis

on:
  workflow_call:
    inputs:
      aws-region:
        required: true
        type: string
      environment-name:
        required: true
        type: string
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true

jobs:
  analyze:
    name: Analyze with Sonar
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ inputs.aws-region }}

      - name: Build with Gradle and publish artifact
        run: |
          cat <<EOL > init-publish.gradle
          allprojects {
              apply plugin: 'java'
              apply plugin: 'maven-publish'

              publishing {
                  publications {
                      mavenJava(MavenPublication) {
                          from components.java
                          versionMapping {
                              usage('java-api') {
                                  fromResolutionOf('runtimeClasspath')
                              }
                              usage('java-runtime') {
                                  fromResolutionResult()
                              }
                          }
                      }
                  }
              }

              repositories {
                  mavenCentral()
              }

              publishing.repositories {
                  maven {
                      name "AwsCodeArtifact"
                      url getAwsCodeArtifactUrl()
                      credentials {
                          username "aws"
                          password getAwsCodeArtifactToken()
                      }
                  }
              }
          }

          def getAwsCodeArtifactToken() {
              new ByteArrayOutputStream().withStream { os ->
                  exec {
                      commandLine 'sh', '-c', "aws codeartifact get-authorization-token --domain devsuperior --query 'authorizationToken' --output text"
                      standardOutput = os
                  }
                  os.toString().trim()
              }
          }

          def getAwsCodeArtifactUrl() {
              new ByteArrayOutputStream().withStream { os ->
                  exec {
                      commandLine 'sh', '-c', "aws codeartifact get-repository-endpoint --domain devsuperior --repository ${{ inputs.environment-name }}-dscommerce --format maven --output text"
                      standardOutput = os
                  }
                  os.toString().trim()
              }
          }
          
          EOL

          ./gradlew clean build publish -I ./init-publish.gradle
 